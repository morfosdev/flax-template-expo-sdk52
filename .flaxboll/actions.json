{"1742404873723":{"actionType":"saveAll","createdAt":"1742404873723","actionID":"1742404873723","userID":"#TEMP","path":"system.capsules.4a541072-7bf3-4396-87fd-11e9879a9e04.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Packs\nimport React from 'react';\nimport JSON5 from 'json5';\nimport { TextInput } from 'react-native';\n\n// ---------- import Local Tools\nimport { getVarValue, getStlValues, pathSel } from '../project';\nimport { useData } from '../../..';\n\ntype Tprops = {\n  pass: {\n    propsArray: any;\n    stylesArray: any;\n    funcsArray: any;\n    path: string[];\n    args: any;\n  };\n};\n\n// IptTxtEdit - Entrada de Texto com prop value\nexport const IptTxtEdit = (props: Tprops) => {\n  // ------- set IptTxt Inputs\n  const { propsArray, stylesArray, funcsArray, path, args } = props.pass;\n  console.log({ props });\n\n  const fxFunction = () => {\n    if (editData) {\n    }\n    if (!editData) splitedPathArr.splice(idxToAdd, 0, 'iptsChanges');\n  };\n\n  // --------------------------\n  // ----------- set COND VALUE\n  // --------------------------\n  const joinedPath = path.join();\n  const splitedPathArr = joinedPath.split('.');\n  const idxToAdd = splitedPathArr.length - 2;\n  const editPath = splitedPathArr.splice(idxToAdd, 0, 'editData').join('.');\n  const newPath = splitedPathArr.splice(idxToAdd, 0, 'iptsChanges').join('.');\n\n  // ------- set Data to Watch\n  const [sttText, setText] = React.useState('');\n  const newData = useData(ct => pathSel(ct, splitedPathArr));\n  const editData = useData(ct => pathSel(ct, splitedPathArr));\n  React.useEffect(fxFunction, [editData]);\n\n  // ---------- Functions\n  const getTxt = async (val: string) => {\n    for (const currFunc of funcsArray) await currFunc(val, args);\n  };\n\n  // ---------- Styles\n  const stlsUser = getStlValues(stylesArray);\n\n  // ------- set User Element Properties (If Exists)\n  const userElProps: any = {};\n  for (let strObj of propsArray) {\n    if (!strObj) continue;\n    if (!props) continue;\n    if (typeof strObj !== 'string') continue;\n\n    const parsedObject = JSON5.parse(strObj);\n\n    for (const keyProp in parsedObject) {\n      const valueProp = parsedObject[keyProp];\n\n      const [hasVar, varValue] = getVarValue(valueProp);\n\n      if (hasVar) userElProps[keyProp] = varValue;\n      if (!hasVar) userElProps[keyProp] = valueProp;\n    }\n  }\n\n  const allProps = {\n    style: stlsUser,\n    onChangeText: getTxt,\n    value: sttText,\n    placeholderTextColor: '#ccc',\n    placeholder: 'Escreva...',\n\n    ...userElProps,\n  };\n\n  return <TextInput {...allProps} />;\n};\n","newValue":"// ---------- import Packs\nimport React from 'react';\nimport JSON5 from 'json5';\nimport { TextInput } from 'react-native';\n\n// ---------- import Local Tools\nimport { getVarValue, getStlValues, pathSel } from '../project';\nimport { useData } from '../../..';\n\ntype Tprops = {\n  pass: {\n    propsArray: any;\n    stylesArray: any;\n    funcsArray: any;\n    path: string[];\n    args: any;\n  };\n};\n\n// IptTxtEdit - Entrada de Texto com prop value\nexport const IptTxtEdit = (props: Tprops) => {\n  // ------- set IptTxt Inputs\n  const { propsArray, stylesArray, funcsArray, path, args } = props.pass;\n\n  const fxFunction = () => {\n    if (editData) {\n    }\n    if (!editData) splitedPathArr.splice(idxToAdd, 0, 'iptsChanges');\n  };\n\n  // --------------------------\n  // ----------- set COND VALUE\n  // --------------------------\n  console.log({ path });\n  const joinedPath = path.join();\n  console.log({ joinedPath });\n  const splitedPathArr = joinedPath.split('.');\n  const idxToAdd = splitedPathArr.length - 2;\n  const editPath = splitedPathArr.splice(idxToAdd, 0, 'editData').join('.');\n  const newPath = splitedPathArr.splice(idxToAdd, 0, 'iptsChanges').join('.');\n\n  // ------- set Data to Watch\n  const [sttText, setText] = React.useState('');\n  const newData = useData(ct => pathSel(ct, splitedPathArr));\n  const editData = useData(ct => pathSel(ct, splitedPathArr));\n  React.useEffect(fxFunction, [editData]);\n\n  // ---------- Functions\n  const getTxt = async (val: string) => {\n    for (const currFunc of funcsArray) await currFunc(val, args);\n  };\n\n  // ---------- Styles\n  const stlsUser = getStlValues(stylesArray);\n\n  // ------- set User Element Properties (If Exists)\n  const userElProps: any = {};\n  for (let strObj of propsArray) {\n    if (!strObj) continue;\n    if (!props) continue;\n    if (typeof strObj !== 'string') continue;\n\n    const parsedObject = JSON5.parse(strObj);\n\n    for (const keyProp in parsedObject) {\n      const valueProp = parsedObject[keyProp];\n\n      const [hasVar, varValue] = getVarValue(valueProp);\n\n      if (hasVar) userElProps[keyProp] = varValue;\n      if (!hasVar) userElProps[keyProp] = valueProp;\n    }\n  }\n\n  const allProps = {\n    style: stlsUser,\n    onChangeText: getTxt,\n    value: sttText,\n    placeholderTextColor: '#ccc',\n    placeholder: 'Escreva...',\n\n    ...userElProps,\n  };\n\n  return <TextInput {...allProps} />;\n};"}}